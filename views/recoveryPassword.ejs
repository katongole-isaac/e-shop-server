<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Recovery Password</title>
</head>

<style>

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

:root {
    --danger: #e63946;
    --bs-danger: #ff758f;
    
}


body {
  background-image: linear-gradient(
  180deg,
  hsl(0deg 0% 100%) 0%,
  hsl(137deg 0% 100%) 16%,
  hsl(137deg 0% 100%) 23%,
  hsl(137deg 0% 100%) 29%,
  hsl(137deg 0% 100%) 34%,
  hsl(137deg 0% 100%) 39%,
  hsl(137deg 0% 100%) 43%,
  hsl(137deg 0% 100%) 48%,
  hsl(137deg 0% 100%) 52%,
  hsl(137deg 0% 100%) 57%,
  hsl(137deg 0% 100%) 61%,
  hsl(137deg 0% 100%) 66%,
  hsl(137deg 0% 100%) 71%,
  hsl(137deg 0% 100%) 77%,
  hsl(137deg 0% 100%) 84%,
  hsl(0deg 0% 100%) 100%
);
    overflow: hidden;
    font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
}


form {
    width: 100%;
    max-width: 350px;
    margin: auto;
    padding: 1em;
    position: absolute;
    top: 10em;
}


form > div {
    padding: .5em 0;
    width: 100%;

}

form  label {
    display: block;
    margin-bottom: 0.5em;
}

form h3 {
    margin-bottom: 1em;
    text-align: center;
    font-weight: 400;
}

input {
    padding: .5em;
    width: 100%;
    margin-bottom: 0.5em;
    border: 1px solid #ccc;
}

input:focus {
    outline: 1.7px solid #ccc;
}

button {
    width: 100%;
    padding: 0.5em;
    margin-top: 0.5em;
    cursor: pointer;
}

small {
    color: var(--danger);

}

.container-fluid {
    width: 100vw;
    height: 100vh ;
}

.container {
    max-width: 800px;
    margin: auto;
    width: 100%;
    height: 100%;
    position: relative;
}

.form-wrapper {
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.card {
    background: white;
}

.success, .error {
    border: 1px solid #eee;
    text-align: center;
    margin-bottom: 1em;
    display: none;

}

.success {
    color: #2f3e46;
    background: rgb(118, 200, 147,0.3);
}

.error {
    background: var(--bs-danger) ;
    
}

.error > small {
    color: white;
}

</style>

<body>

    <div class="container-fluid">

        <div class="container">

            <div class="form-wrapper">

                <form  name="recovery" method="post"   >
                    <div class="success"> <p> we've sent a link to your email. </p>  </div>
                    <div class="error">  <small>  </small> </div>
                    <h3>Forgot Password</h3>

                    <div>

                        <input type="email" name="email" id="email"  placeholder="enter your email here...." autocomplete="off" >

                        <small id="errMsg" >   </small>

                    </div>

                    <button type="submit" id="btn" >Request recovery link</button>

            </form>

            </div>
            

        </div>
    </div>
    

    <script> 

    // For sending email for password recovery
    const url = "http://localhost:3000/customers/forgot-password";

    let btn = document.getElementById('btn');
   
    btn.onclick =  async function(e) {
        await requestLink(e)
    }

    async function requestLink ( e ) {
        e.preventDefault();

        let email = document.forms[0]['email'].value.trim();
        let error = document.querySelector('.error > small');
        let success = document.querySelector('.success > p');
        let errorMsgBox = document.querySelector('#errMsg');
         
         if(! validate(email)) {
            errorMsgBox.innerHTML = "Must be a valid email";

            return false;
        } else  errorMsgBox.innerHTML = "";


        try {

             const resp =   await fetch(url, {
            method: 'post',
            body: JSON.stringify({email}),
            headers: {
                'Content-Type': "application/json"
            }
        });

        const data =  await resp.json();

        if(resp.status === 200 ){
            error.parentElement.style.display ="none";
            success.parentElement.style.display = "block"
            return;
        }
        else {

            for(let key in data) {
                error.innerHTML = data[key];
                success.parentElement.style.display = "none"
                error.parentElement.style.display ="block";
            }
        }

        } catch (ex) {
            success.parentElement.style.display = "none"
            error.parentElement.style.display ="block";
            error.innerHTML = ex.message;
        }
     
    }

    function validate(email) {

            const regexp =
    /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;

            if( !(!!email && regexp.test(email ) )  )
                return false;

            return true;
        }
    
    </script>
    

</body>
</html>